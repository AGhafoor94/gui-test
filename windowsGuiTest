#include <Windows.h>

LRESULT CALLBACK WndProc(HWND handleWindow, UINT message, WPARAM wParam, LPARAM lParam);

int WINAPI wWinMain(HINSTANCE hInstance, HINSTANCE previousInstance, LPWSTR lpCommandLine, int nCommandShow)
{
    // cl windows.c user32.lib
    MessageBoxExW(0,L"Test",L"Testing",MB_OK,0);
    LPCWSTR menuName = L"Hi";
    LPCWSTR className = L"Window";
    WNDCLASSEXW windowClass = {0};
    windowClass.cbSize = sizeof(WNDCLASSEX);
    windowClass.style = CS_OWNDC | CS_VREDRAW | CS_HREDRAW;
    windowClass.lpfnWndProc = WndProc;
    windowClass.hCursor = LoadCursor(NULL, IDC_ARROW);
    windowClass.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
    windowClass.lpszMenuName = L"Hi";
    windowClass.lpszClassName = L"Window";
    windowClass.hIconSm = NULL;
    windowClass.hInstance = hInstance;
    windowClass.hIcon = NULL;
    windowClass.cbClsExtra = 0;
    windowClass.cbWndExtra = 0;
    RegisterClassExW(&windowClass);
    // HWND handleWindow = CreateWindowEXW(NULL, L"TEST",L"Window",WS_OVERLAPPEDWINDOW,CW_USEDEFAULT, 0, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, 0, 0, hInstance, 0);
    // CreateWindowW(lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam) 
    HWND handleWindow = CreateWindowW(L"Window",L"Hi",  WS_OVERLAPPEDWINDOW, 100, 100, 500, 500, NULL, NULL, hInstance, 0);

    ShowWindow(handleWindow, nCommandShow);
    UpdateWindow(handleWindow);
    MSG message = {0};

    while (GetMessageW(&message, NULL, 0, 0))
    {
        TranslateMessage(&message);
        DispatchMessage(&message);
    }

    return 0;
}
LRESULT CALLBACK WndProc(HWND handleWindow, UINT message, WPARAM wParam, LPARAM lParam)
{
    LRESULT result = 0;
    switch (message)
    {
    case WM_COMMAND:
    {
        OutputDebugStringA("WM_COMMAND\n");
        result = 0;
    }
    break;
    case WM_ACTIVATEAPP:
    {
        OutputDebugStringA("WM_ACTIVATEAPP");
        result = 0;
    }
    break;
    case WM_PAINT:
    {
        PAINTSTRUCT paintStruct = {0};
        RECT rectangle = {0};
        HDC handleDCBeginPaint = BeginPaint(handleWindow, &paintStruct);
        GetClientRect(handleWindow, &rectangle);
        // FillRect(handleDCBeginPaint,&rectangle,0x00A12345);
        EndPaint(handleWindow, &paintStruct);
        result = 0;
    }
    break;
    case WM_DESTROY:
    {
        result = 0;
        PostQuitMessage(0);
    }
    break;
    case WM_CLOSE:
    {
        result = 0;
        PostQuitMessage(0);
    }
    break;
    default:
        result = DefWindowProc(handleWindow, message, wParam, lParam);
    }
    return result;
}
